package losrebellos.lospistoleros.components.preloader.sprite {	import losrebellos.console.Console;	import losrebellos.lospistoleros.components.container.sprite.PContainerSprite;	import losrebellos.lospistoleros.core.controller.sprite.IPControllerSprite;	import losrebellos.lospistoleros.core.model.sprite.IPModelSprite;	import losrebellos.lospistoleros.core.view.sprite.PSprite;	import losrebellos.lospistoleros.data.Content;	import losrebellos.lospistoleros.events.PPreloaderEvent;	import com.pixelbreaker.ui.osx.MacMouseWheel;	import flash.events.Event;	/*	 *	 * @author los rebellos	 *	 */	public class PPreloaderSprite extends PSprite	{		/*		 * 		 * VARIABLES		 * 		 */		protected var _percent:Number = 0;		protected var _container:PContainerSprite;						/*		 * 		 * CONSTRUCTOR		 * 		 */		public function PPreloaderSprite(name:String = null)		{			super(name);						this.addEventListener(Event.ADDED_TO_STAGE, addedToStage);						//assets			_model.addEventListener(PPreloaderEvent.PROGRESS, progressHandler);			_model.addEventListener(PPreloaderEvent.COMPLETE, completeHandler);			_model.addEventListener(PPreloaderEvent.ERROR, errorHandler);		}						/*		 * 		 * MVC		 * 		 */		override protected function createModel():IPModelSprite		{			return new PPreloaderModelSprite();		}		override protected function createController():IPControllerSprite		{			return new PPreloaderControllerSprite(_model, this);		}				/*		 * 		 * CONTENT		 * 		 */		override protected function createContent():void		{			_container = new PContainerSprite();			this.addChild(_container);		}						/*		 * 		 * STAGE		 * 		 */		protected function addedToStage(e:Event):void		{			this.removeEventListener(Event.ADDED_TO_STAGE, addedToStage);						initMouseWheel();			initStage();			initFlashVars();						(_controller as PPreloaderControllerSprite).load();						resizeHandler();		}		protected function addMainToContainer():void		{			_container.addMain((_model as PPreloaderModelSprite).getMain());		}		protected function initMouseWheel():void		{			MacMouseWheel.setup(stage);		}		protected function initStage():void		{			var m:PPreloaderModelSprite = _model as PPreloaderModelSprite;			stage.scaleMode = m.getStage().scale;			stage.align = m.getStage().align;			stage.quality = m.getStage().quality;			stage.addEventListener(Event.RESIZE,resizeHandler);		}		protected function resizeHandler(e:Event = null):void		{					}						/*		 * 		 * FLASH VARS		 * 		 */		protected function initFlashVars():void		{			try			{				var param:Object = root.loaderInfo.parameters;				for(var key:String in param)				{					//set the language					if(Content.LANGUAGE == key)						Content.instance.setLanguage(String(param[key]));				}			}			catch (error:Error)			{				Console.output(this, "flash vars error: " + error.name);			}						(_controller as PPreloaderControllerSprite).setLanguage(Content.instance.getLanguage());		}				/*		 * 		 * HANDLERS		 * 		 */		protected function progressHandler(e:PPreloaderEvent):void		{			_percent = e.percent_loaded;		}		protected function completeHandler(e:PPreloaderEvent):void		{			_model.removeEventListener(PPreloaderEvent.PROGRESS, progressHandler);			_model.removeEventListener(PPreloaderEvent.COMPLETE, completeHandler);			_model.removeEventListener(PPreloaderEvent.ERROR, errorHandler);						_percent = 1;						addMainToContainer();		}		protected function errorHandler(e:PPreloaderEvent):void		{			_model.removeEventListener(PPreloaderEvent.PROGRESS, progressHandler);			_model.removeEventListener(PPreloaderEvent.COMPLETE, completeHandler);			_model.removeEventListener(PPreloaderEvent.ERROR, errorHandler);						Console.output(this, "errorHandler!!!");		}	}}