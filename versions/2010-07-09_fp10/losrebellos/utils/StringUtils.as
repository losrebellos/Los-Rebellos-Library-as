package losrebellos.utils {	/**	 * @author los rebellos	 */	public class StringUtils {						/*		 * 		 * REPLACE		 * 		 */		public static function replace(txt:String, s:String, r:String, flags:String = "gi"):String		{			var pattern:RegExp = new RegExp("\(" + s + ")", flags);			return txt.replace(pattern, r);		}						/*		 * 		 * remplace in a string all the array of elements by an element		 * useful to clean an url		 * 		 */		public static function multipleReplace(txt:String, tab_s:Array, tab_r:Array, flags:String = "gi"):String		{			var new_txt:String = txt;						for(var i:Number = 0;i<tab_s.length;i++)				new_txt = replace(new_txt, tab_s[i], tab_r[i], flags);						return new_txt;		}						/*		 * 		 * RETURN A STRING WITHOUT WHITE SPACE		 * 		 */		public static function clean(txt:String):String		{			return replace(txt, " ", "");		}						/*		 * 		 * EMAIL VALIDATION		 * 		 */		public static function isEmail(txt:String):Boolean 		{			return RegExUtils.execute(txt, RegExUtils.EMAIL, "i");		}				/*		 * 		 * CHECK PHONE NUMBER		 * 		 */		public static function isPhoneNumber(country:String, txt:String):Boolean		{			return RegExUtils.execute(txt, "^(((\\+" + country + "\\s?\\d{4}|\\(?0\\d{4}\\)?)\\s?\\d{3}\\s?\\d{3})|((\\+" + country + "\\s?\\d{3}|\\(?0\\d{3}\\)?)\\s?\\d{3}\\s?\\d{4})|((\\+" + country + "\\s?\\d{2}|\\(?0\\d{2}\\)?)\\s?\\d{4}\\s?\\d{4}))(\\s?\\#(\\d{4}|\\d{3}))?$");		}						/*		 * 		 * CHECK IF A STRING IS A INTEGER DIFFRENT FORM 0		 * 		 */		public static function isIntNotNull(txt:String):Boolean		{			return !(int(txt) == 0);		}						/*		 * 		 * CONTAIN		 * 		 */		public static function contains(txt:String, s:String):Boolean		{			return txt != txt.replace(s, "");		}		//not working		public static function isContained(txt:String, s:String):int		{			var loop:Boolean = true;			var temp_txt:String = txt;			var match:int = 0;						while(loop)			{				var search:int = temp_txt.indexOf(s);				if(search > -1 && s.length <= temp_txt.length)				{					temp_txt = temp_txt.substr(search, temp_txt.length - search);					match++;				}				else					loop = false;			}						return match;		}						/*		 * 		 * CAPITALIZE		 * 		 */		public static function capitalize(txt:String):String		{			return txt.substr(0, 1).toUpperCase() + txt.substr(1, txt.length - 1);		}	}}