package losrebellos.lospistoleros.data {	import losrebellos.events.EventDispatcherPlus;	import flash.errors.IllegalOperationError;	import flash.utils.Dictionary;	/*	 *	 * @author los rebellos	 *	 */	public class Content extends EventDispatcherPlus 	{		/*		 * 		 * VARIABLES		 * 		 */		public static const LANGUAGE:String = "lang";		public static const DEFAULT_LANGUAGE:String = "en_GB";				private var _language:String = DEFAULT_LANGUAGE;		private var _xml:XML;		private var _dict:Dictionary = new Dictionary(true);				/*		 * 		 * CONSTRUCTOR		 * 		 */		public function Content(singleton:SingletonEnforcer)		{			super();							if(!singleton)				throw new IllegalOperationError(">>>>> Content class is a singleton");		}						/*		 * 		 * SINGLETON		 * 		 */		private static var _instance:Content = null;		public static function get instance():Content		{			if(!_instance)				_instance = new Content(new SingletonEnforcer);						return _instance;		}						/*		 * 		 * LANG		 * 		 */		public function setLanguage(language:String):void		{			_language = language;		}		public function getLanguage():String		{			return _language;		}						/*		 * 		 * XML		 * 		 */		public function register(xml:XML):void		{			_xml = xml;						var xml_list_texts:XMLList = _xml["text"];			for(var i:int = 0; i<xml_list_texts.length(); i++)				_dict[String(xml_list_texts[i].@id)] = String(xml_list_texts[i]);		}		public function getXML():XML		{			return _xml;		}						/*		 * 		 * CONTENT		 * 		 */		public function getText(id:String):String		{			return _dict[id];		}	}}class SingletonEnforcer {}