package losrebellos.utils {	//-----//	//----- @author los rebellos -----//	public class RegExUtils {				/*		 * 		 * EXPRESSIONS		 * 		 */		public static const SPECIAL_CHARACTERS:Array = [];				//email		public static const EMAIL:String = "^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$";		public static const EMAIL_REG_EXP:RegExp = /^[\w-]+(\.[\w-]+)*@([a-z0-9-]+(\.[a-z0-9-]+)*?\.[a-z]{2,6}|(\d{1,3}\.){3}\d{1,3})(:\d{4})?$/;				//date of birth in english/american notation: 10/26/1981		public static const DOB:String = "(0[1-9]|1[012])[\\/](0[1-9]|[12][0-9]|3[01])[\\/](19|20)[0-9]{2}";		public static const DOB_REG_EXP:RegExp = /(0[1-9]|1[012])[\/](0[1-9]|[12][0-9]|3[01])[\/](19|20)[0-9]{2}/;				//html tag		public static const HTML_TAGS:String = "<([A-Z][A-Z0-9]*)\\b[^>]*>(.*?)</1>";		public static const HTML_TAGS_EXP:RegExp = /<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)<\/\1>/;						/*		 * 		 * EXECUTE A REGEXP AS STRING AND RETURN A BOOLEAN		 * 		 */		public static function execute(txt:String, re:*, flags:String = ""):Boolean		{			var reg_exp:RegExp;						if(re is String)				reg_exp = new RegExp(re, flags);			else if(re is RegExp)				reg_exp = re;						return reg_exp.test(txt);		}	}}