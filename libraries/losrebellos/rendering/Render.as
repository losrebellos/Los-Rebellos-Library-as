package losrebellos.rendering {	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.DisplayObject;	import flash.geom.Matrix;	import flash.geom.Rectangle;	/*	 *	 * @author los rebellos	 *	 */	public class Render 	{		/*		 * 		 * BITMAPDATA		 * 		 */		public static function getBitmapDataAuto(d:DisplayObject, mode:BitmapDataRenderType = null):BitmapData		{			if(!mode)				mode = new BitmapDataRenderType;						var w:Number = d.width;			var h:Number = d.height;						if(w > 0 && h > 0)			{				var bmpd:BitmapData = new BitmapData(w, h, mode.transparent, mode.fillColor);				bmpd.draw(d);								return bmpd;			}						return null;		}		public static function getBitmapData(d:DisplayObject, rect:Rectangle, mode:BitmapDataRenderType):BitmapData		{			if(rect.width > 0 && rect.height > 0)			{				var bmpd:BitmapData = new BitmapData(rect.width, rect.height, mode.transparent, mode.fillColor);				var matrix:Matrix = new Matrix(1, 0, 0, 1, 0, 0);				matrix.translate(-rect.x, -rect.y);//				bmpd.draw(d, matrix, null, null, rect);				bmpd.draw(d, matrix);								return bmpd;			}						return null;		}				/*		 * 		 * BITMAP		 * 		 */		public static function getBitmapAuto(d:DisplayObject, mode:RenderType = null):Bitmap		{			if(!mode)				mode = new RenderType;						var bmpd:BitmapData = getBitmapDataAuto(d, mode.bitmapDataRenderMode);						if(bmpd)				return new Bitmap(bmpd, mode.bitmapRenderMode.pixelSnapping, mode.bitmapRenderMode.smoothing);						return null;		}		public static function getBitmap(d:DisplayObject, rect:Rectangle, mode:RenderType):Bitmap		{			var bmpd:BitmapData = getBitmapData(d, rect, mode.bitmapDataRenderMode);						if(bmpd)				return new Bitmap(bmpd, mode.bitmapRenderMode.pixelSnapping, mode.bitmapRenderMode.smoothing);						return null;		}						/*		 * 		 * RESIZE BITMAPDATA		 * 		 */		public static function resizeBitmapData(original_bmd:BitmapData, w:int, h:int, mode:BitmapDataRenderType = null):BitmapData		{			if(!mode)				mode = new BitmapDataRenderType;						var amout_width:Number = w / original_bmd.width;			var amout_height:Number = h / original_bmd.height;						var matrix:Matrix = new Matrix();			matrix.scale(amout_width, amout_height);						var bmd:BitmapData = new BitmapData(w, h, mode.transparent, mode.fillColor);			bmd.draw(original_bmd, matrix, null, null, null, true);						return bmd;		}						/*		 * 		 * RESIZE BITMAP		 * 		 */		public static function resizeBitmap(original_bm:Bitmap, w:int, h:int, mode:RenderType = null):Bitmap		{			if(!mode)				mode = new RenderType;						var bmd:BitmapData = resizeBitmapData(original_bm.bitmapData, w, h, mode.bitmapDataRenderMode);						return new Bitmap(bmd, mode.bitmapRenderMode.pixelSnapping, mode.bitmapRenderMode.smoothing);		}	}}