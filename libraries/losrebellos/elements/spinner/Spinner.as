package losrebellos.elements.spinner {	import losrebellos.display.SpritePlus;	import flash.display.DisplayObject;	import flash.errors.IllegalOperationError;	import flash.events.Event;	/*	 *	 * @author los rebellos	 *	 */	public class Spinner extends SpritePlus 	{		/*		 * 		 * VARIABLES		 * 		 */		private var _petal:Class;		private var _petals:int;		private var _currentPetal:int = 0;		private var _tabPetals:Array = [];						/*		 * 		 * CONSTRUCTOR		 * 		 */		public function Spinner(petal:Class = null, petals:int = 9)		{			_petal = petal ? petal : Petal;			_petals = petals;						checkPetal();						super();						this.mouse = false;			this.alpha = 0;		}						/*		 * 		 * CONTENT		 * 		 */		protected function checkPetal():void		{			if(!(new _petal() is IPetal))			{				throw new IllegalOperationError(">>>>> Spinner class need an object interfaced with IPetal");			}		}		override protected function createContent():void		{			for(var i:int = 0; i<_petals; i++)			{				_tabPetals.push(new _petal());			}		}		override protected function addContent():void		{			for(var i:int = 0; i<_tabPetals.length; i++)			{				var petal:IPetal = _tabPetals[i];				petal.rotation = i * 360 / _petals;								this.addChild(petal as DisplayObject);			}		}						/*		 * 		 * SPIN		 * 		 */		public function start():void		{			this.alpha = 1;			this.addEventListener(Event.ENTER_FRAME, spinHandler);		}		public function stop():void		{			this.alpha = 0;			this.removeEventListener(Event.ENTER_FRAME, spinHandler);		}		protected function spinHandler(e:Event):void		{			//previous petal			(_tabPetals[_currentPetal] as IPetal).off();						//targetted petal			_currentPetal++;			if(_currentPetal > _petals - 1)			{				_currentPetal = 0;			}						//current petal			(_tabPetals[_currentPetal] as IPetal).on();		}	}}