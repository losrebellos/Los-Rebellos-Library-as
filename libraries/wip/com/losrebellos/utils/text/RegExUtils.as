package com.losrebellos.utils.text{	/*	 *	 * @author los rebellos - ben@benoitvinay.com	 *	 */	public final class RegExUtils	{		////////////////////////////////////////////////////////////////////////////////////////////////////////////////		// CONSTANTS		////////////////////////////////////////////////////////////////////////////////////////////////////////////////				public static const SPECIAL_CHARACTERS:Array = [];				// empty string		public static const EMPTY:String			= "^.+$";		public static const EMPTY_REG_EXP:RegExp	= /^.+$/;		public static const SPACE:RegExp			= /[\s\r\n]*/gim;				// email		public static const EMAIL:String			= "^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$";		public static const EMAIL_REG_EXP:RegExp	= /^[\w-]+(\.[\w-]+)*@([a-z0-9-]+(\.[a-z0-9-]+)*?\.[a-z]{2,6}|(\d{1,3}\.){3}\d{1,3})(:\d{4})?$/;				// date of birth in english/american notation: 10/26/1981		public static const DOB:String				= "(0[1-9]|1[012])[\\/](0[1-9]|[12][0-9]|3[01])[\\/](19|20)[0-9]{2}";		public static const DOB_REG_EXP:RegExp		= /(0[1-9]|1[012])[\/](0[1-9]|[12][0-9]|3[01])[\/](19|20)[0-9]{2}/;				// html tag		public static const HTML_TAGS:String		= "<([A-Z][A-Z0-9]*)\\b[^>]*>(.*?)</1>";		public static const HTML_TAGS_EXP:RegExp	= /<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)<\/\1>/;		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// EXECUTE A REGEXP AS STRING AND RETURN A BOOLEAN
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////		public static function execute(txt:String, expression:*, flags:String = null):Boolean		{			var regExp:RegExp;			if(expression is String)			{				regExp = new RegExp(expression, flags || "");			}			else if(expression is RegExp)			{				regExp = expression;			}			return regExp.test(txt);		}	}}