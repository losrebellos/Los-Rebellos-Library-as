package com.losrebellos.project.framework.robotlegs.plugin.statemachine.manager
{
	import org.robotlegs.mvcs.Actor;
	import org.robotlegs.utilities.statemachine.IFSMInjector;
	import org.robotlegs.utilities.statemachine.IStateMachine;
	import org.robotlegs.utilities.statemachine.StateEvent;

	import flash.events.IEventDispatcher;

	/**
	 * @author Los Rebellos (Benoit Vinay)
	 */
	public class BaseStateMachineManager extends Actor implements IStateMachineManager
	{
		[Inject]
		public var fsmInjector:IFSMInjector;
		
		[Inject]
		public var fsm:IStateMachine;
		
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// CONSTRUCTOR
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public function BaseStateMachineManager()
		{
			super();
		}
		
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// INIT
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		[Inject]
		override public function set eventDispatcher(value:IEventDispatcher):void
		{
			_eventDispatcher = value;
			
			if(_eventDispatcher)
			{
				init();
			}
		}
		protected function init():void
		{
			_eventDispatcher.addEventListener(StateEvent.CHANGED, onStateChanged);
		}
		
		
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// STATES
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		protected function onStateChanged(e:StateEvent):void
		{
			// need to be overridden
		}
		
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ACTION
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		protected function dispatchAction(action:String, data:Object = null):void
		{
			dispatch(new StateEvent(StateEvent.ACTION, action, data));
		}
	}
}