package com.losrebellos.net {	import com.losrebellos.events.EventDispatcherPlus;	import com.losrebellos.events.NetStreamClientEvent;	/*	 *	 * @author los rebellos - ben@benoitvinay.com	 *	 */	public final class NetStreamClient extends EventDispatcherPlus implements INetStreamClient	{		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// CONSTRUCTOR
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////		public function NetStreamClient()		{			//nothing		}						////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// META DATA
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////		public function onMetaData(metaData:Object):void		{			parse(metaData);			dispatchEvent(new NetStreamClientEvent(NetStreamClientEvent.META_DATA, _metaData));		}		protected function parse(metaData:Object):void		{			_metaData = new MetaData(metaData);		}		private var _metaData:MetaData;		public function get metaData():MetaData		{			return _metaData;		}						////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// OTHER METHODS
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////		public function onCuePoint(cuePoint:Object):void		{			dispatchEvent(new NetStreamClientEvent(NetStreamClientEvent.CUE_POINT, cuePoint));		}		public function onImageData(imageData:Object):void		{			dispatchEvent(new NetStreamClientEvent(NetStreamClientEvent.IMAGE_DATA, imageData));		}		public function onPlayStatus(playStatus:Object):void		{			dispatchEvent(new NetStreamClientEvent(NetStreamClientEvent.PLAY_STATUS, playStatus));		}		public function onTextData(textData:Object):void		{			dispatchEvent(new NetStreamClientEvent(NetStreamClientEvent.PLAY_STATUS, textData));		}		public function onXMPData(xmpData:Object):void		{			dispatchEvent(new NetStreamClientEvent(NetStreamClientEvent.XMP_DATA_ERROR, xmpData));		}	}}